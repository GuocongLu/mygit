<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    
    <!-- 读取数据源配置文件 -->
    <context:property-placeholder location="classpath:database.properties"/> 
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="${driver}"/>
       <property name="url" value="${url}"/>
       <property name="username" value="${user}"/>
       <property name="password" value="${password}"/>
       <property name="initialSize" value="${initialSize}"/>
       <property name="maxActive" value="${maxActive}"/>
       <property name="maxIdle" value="${maxIdle}"/>
       <property name="minIdle" value="${minIdle}"/>
       <property name="maxWait" value="${maxWait}"/>
       <property name="removeAbandoned" value="${removeAbandoned}"/>
       <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
       <!-- sql心跳 -->
       <property name="testWhileIdle" value="true"/>
       <property name="testOnBorrow" value="false"/>
       <property name="testOnReturn" value="false"/>
       <property name="validationQuery" value="select 1"/>
       <property name="timeBetweenEvictionRunsMillis" value="60000"/>
       <property name="numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
    
    <!-- 配置扫描注解定义的业务bean -->
    <context:component-scan base-package="cn.mytest.service"/>
    <!-- 注解切面驱动 -->
    <aop:aspectj-autoproxy/>
     <!-- 配置事物管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 引用数据源组件 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用<tx:advice>标签设置事务管理器属性 -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice> 
    <!-- 配置切面 -->
    <aop:config>
        <!-- 定义切点 -->
        <aop:pointcut expression="execution(* cn.mytest.service..*.*(..))" id="myPoint"/>
        <!-- 将事务与切点整合 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPoint"/>
    </aop:config>  
    <!--配置SqlSessionFactoryBean实例 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引用数据源组件 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 引入MyBatis配置文件 --> 
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- SQL映射文件略 -->
    </bean>
    <!-- MapperScannerConfigurer注入映射器配置Dao层 ,直接获取dao层实现类的实例,该实例名称自动生成，无需手动命名(id)-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
       <property name="basePackage" value="cn.mytest.dao"/>
    </bean> 
</beans>

